{"version":3,"file":"static/js/236.e4307cc6.chunk.js","mappings":"6RAQMA,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KACHE,SAAS,oBACTC,IAAI,EAAG,wCACPC,IAAI,GAAI,wCACXC,MAAOL,EAAAA,KACJE,SAAS,qBACTG,MAAM,yBACTC,SAAUN,EAAAA,KACPE,SAAS,wBACTC,IAAI,EAAG,4CACPI,KACC,cACA,+CACA,SAAAC,GAAK,OAAKA,EAAMC,cAAcC,SAAS,WAAW,MAI3CC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEf,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDP,iBAAkBA,EAClBkB,SATiB,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BR,GAASS,EAAAA,EAAAA,IAASH,IAClBE,GACF,EAM2BE,UAEvBR,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CACFC,GAAI,CACFC,OAAQ,YACRC,MAAO,IACPC,eAAgB,SAChBC,QAAS,MACTN,UAEFR,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAAAP,UACHQ,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGN,eAAe,SAAQL,SAAA,EACjDQ,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGb,SAAA,EAChBR,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CACJC,GAAIC,EAAAA,EACJC,MAAM,WACNC,QAAQ,WACRC,WAAS,EACTvC,UAAQ,EACRD,KAAK,UAEPa,EAAAA,EAAAA,KAAC4B,EAAAA,GAAY,CACXzC,KAAK,OACL0C,UAAU,MACVC,UAAU,QACVC,MAAO,CAAEC,MAAO,MAAOC,SAAU,cAGrCjB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGb,SAAA,EAChBR,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CACJC,GAAIC,EAAAA,EACJC,MAAM,QACNC,QAAQ,WACRC,WAAS,EACTvC,UAAQ,EACRD,KAAK,QACL+C,KAAK,WAEPlC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAY,CACXzC,KAAK,QACL0C,UAAU,MACVC,UAAU,QACVC,MAAO,CAAEC,MAAO,MAAOC,SAAU,cAGrCjB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGb,SAAA,EAChBR,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CACJC,GAAIC,EAAAA,EACJC,MAAM,WACNC,QAAQ,WACRC,WAAS,EACTvC,UAAQ,EACRD,KAAK,WACL+C,KAAK,cAEPlC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAY,CACXzC,KAAK,WACL0C,UAAU,MACVC,UAAU,QACVC,MAAO,CAAEC,MAAO,MAAOC,SAAU,cAGrCjC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGb,UAChBR,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLD,KAAK,SACLR,QAAQ,YACRC,WAAS,EACTjB,GAAI,CACF0B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,sBAEnB5B,SACH,uBASf,EC7GA,EATiB,WACf,OACEQ,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACER,EAAAA,EAAAA,KAAA,SAAAQ,SAAO,kBACPR,EAAAA,EAAAA,KAACH,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import React from 'react';\nimport { TextField, Button, Grid, Box } from '@mui/material';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operation';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .required('Name is required')\n    .min(3, 'Name should be at least 3 characters')\n    .max(30, 'Name should not exceed 30 characters'),\n  email: Yup.string()\n    .required('Email is required')\n    .email('Invalid email address'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(7, 'Password should be at least 7 characters')\n    .test(\n      'no-password',\n      'Password cannot contain the word \"password\"',\n      value => !value.toLowerCase().includes('password')\n    ),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Box\n        sx={{\n          margin: '20px auto',\n          width: 500,\n          justifyContent: 'center',\n          padding: '10',\n        }}\n      >\n        <Form>\n          <Grid container spacing={2} justifyContent=\"center\">\n            <Grid item xs={12}>\n              <Field\n                as={TextField}\n                label=\"Username\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                name=\"name\"\n              />\n              <ErrorMessage\n                name=\"name\"\n                component=\"div\"\n                className=\"error\"\n                style={{ color: 'red', fontSize: '14px' }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Field\n                as={TextField}\n                label=\"Email\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                name=\"email\"\n                type=\"email\"\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"error\"\n                style={{ color: 'red', fontSize: '14px' }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Field\n                as={TextField}\n                label=\"Password\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                name=\"password\"\n                type=\"password\"\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"error\"\n                style={{ color: 'red', fontSize: '14px' }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                fullWidth\n                sx={{\n                  backgroundColor: '#38d2d2',\n                  '&:hover': {\n                    backgroundColor: 'rgb(41, 132, 132)',\n                  },\n                }}\n              >\n                Register\n              </Button>\n            </Grid>\n          </Grid>\n        </Form>\n      </Box>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["validationSchema","Yup","name","required","min","max","email","password","test","value","toLowerCase","includes","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","_ref","resetForm","register","children","Box","sx","margin","width","justifyContent","padding","Form","_jsxs","Grid","container","spacing","item","xs","Field","as","TextField","label","variant","fullWidth","ErrorMessage","component","className","style","color","fontSize","type","Button","backgroundColor"],"sourceRoot":""}