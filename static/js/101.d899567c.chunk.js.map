{"version":3,"file":"static/js/101.d899567c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Form as FormikForm } from 'formik';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 500px;\n  margin: 15px auto;\n  padding: 15px;\n  background-color: rgba(255, 255, 255, 0.9);\n  border-radius: 5px;\n  box-shadow: 0 15px 30px 1px grey;\n  text-align: center;\n`;\n\nexport const Form = styled(FormikForm)`\n  padding: 8px;\n  border: 1px solid #2a2a2a;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 10px;\n`;\n\nexport const ErrorInfo = styled.span`\n  font-size: 14px;\n  color: #38d2d2;\n`;\n\nexport const ButtonForm = styled.button`\n  width: 200px;\n  margin: 0 auto;\n  color: #fff;\n  padding: 15px 25px;\n  background-color: #38d2d2;\n  background-image: radial-gradient(\n      93% 87% at 87% 89%,\n      rgba(0, 0, 0, 0.23) 0%,\n      transparent 86.18%\n    ),\n    radial-gradient(\n      66% 66% at 26% 20%,\n      rgba(255, 255, 255, 0.55) 0%,\n      rgba(255, 255, 255, 0) 69.79%,\n      rgba(255, 255, 255, 0) 100%\n    );\n  box-shadow: inset -3px -3px 9px rgba(255, 255, 255, 0.25),\n    inset 0px 3px 9px rgba(255, 255, 255, 0.3),\n    inset 0px 1px 1px rgba(255, 255, 255, 0.6),\n    inset 0px -8px 36px rgba(0, 0, 0, 0.3),\n    inset 0px 1px 5px rgba(255, 255, 255, 0.6), 2px 19px 31px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  font-weight: bold;\n  font-size: 16px;\n  display: block;\n  border: 0;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  cursor: pointer;\n  &:hover {\n    box-shadow: rgba(255, 255, 255, 0.2) 0 3px 15px inset,\n      rgba(0, 0, 0, 0.1) 0 3px 5px, rgba(0, 0, 0, 0.1) 0 10px 13px;\n    transform: scale(1.05);\n  }\n`;\n","import { createSelector } from 'reselect';\nexport const selectContact = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const getVisibleContacts = createSelector(\n  [selectContact, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { ButtonForm, ErrorInfo } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContact } from 'redux/selectors';\nimport { TextField } from '@mui/material';\n\nconst contactFormSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required!'),\n  number: yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n\n  const handleSubmit = (values, actions) => {\n    if (contacts.find(contact => contact.name === values.name)) {\n      alert(`${values.name} is already in contacts`);\n      return;\n    }\n    const contact = {\n      name: values.name,\n      number: values.number,\n      id: nanoid(),\n    };\n    console.log(contact);\n\n    // if (contacts.find(({ name }) => name === contact.name)) {\n    //   alert(`${contact.name} is already in contacts`);\n    //   return;\n    // }\n\n    dispatch(addContact(contact));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={contactFormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Field\n          as={TextField}\n          name=\"name\"\n          label=\"Name\"\n          placeholder=\"Annie Copeland\"\n          required\n          fullWidth\n          size=\"small\"\n          margin=\"normal\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          helperText={<ErrorMessage name=\"name\" component={ErrorInfo} />}\n        />\n        <Field\n          as={TextField}\n          type=\"tel\"\n          name=\"number\"\n          label=\"Number\"\n          placeholder=\"227-91-26\"\n          required\n          fullWidth\n          size=\"small\"\n          margin=\"normal\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          helperText={<ErrorMessage name=\"number\" component={ErrorInfo} />}\n        />\n        <ButtonForm type=\"submit\">Add contact</ButtonForm>\n      </Form>\n    </Formik>\n  );\n};\n","import { selectFilter } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { TextField } from '@mui/material';\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const changeFilterHandler = event => {\n    dispatch(changeFilter(event.currentTarget.value));\n  };\n  return (\n    <TextField\n      label=\"Find contacts by name\"\n      type=\"text\"\n      value={filter}\n      onChange={changeFilterHandler}\n      fullWidth\n      size=\"small\"\n      margin=\"normal\"\n    ></TextField>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 300px;\n  margin: 15px auto;\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  justify-content: space-between;\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  color: #fff;\n  padding: 7px 10px;\n  background-color: #38d2d2;\n  background-image: radial-gradient(\n      93% 87% at 87% 89%,\n      rgba(0, 0, 0, 0.23) 0%,\n      transparent 86.18%\n    ),\n    radial-gradient(\n      66% 66% at 26% 20%,\n      rgba(255, 255, 255, 0.55) 0%,\n      rgba(255, 255, 255, 0) 69.79%,\n      rgba(255, 255, 255, 0) 100%\n    );\n  box-shadow: inset -3px -3px 9px rgba(255, 255, 255, 0.25),\n    inset 0px 3px 9px rgba(255, 255, 255, 0.3),\n    inset 0px 1px 1px rgba(255, 255, 255, 0.6),\n    inset 0px -8px 36px rgba(0, 0, 0, 0.3),\n    inset 0px 1px 5px rgba(255, 255, 255, 0.6), 2px 19px 31px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  font-weight: bold;\n  font-size: 16px;\n  display: block;\n  border: 0;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  cursor: pointer;\n  &:hover {\n    box-shadow: rgba(255, 255, 255, 0.2) 0 3px 15px inset,\n      rgba(0, 0, 0, 0.1) 0 3px 5px, rgba(0, 0, 0, 0.1) 0 10px 13px;\n    transform: scale(1.05);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Wrapper } from './Contact.styled';\nimport { Button } from './Contact.styled';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ item: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  const deleteContactHandler = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <Wrapper>\n      <p>\n        {name} : {number}\n      </p>\n      <Button type=\"button\" onClick={() => deleteContactHandler(id)}>\n        Delete\n      </Button>\n    </Wrapper>\n  );\n};\n\nContact.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { Triangle } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <div>\n      <Triangle\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"triangle-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Contact } from '../Contact/Contact';\nimport {\n  getVisibleContacts,\n  selectLoading,\n  selectError,\n} from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul>\n          {visibleContacts?.map(item => (\n            <li key={item.id}>\n              <Contact item={item} />\n            </li>\n          ))}\n        </ul>\n      )}\n      {!visibleContacts.length && !error && !isLoading && (\n        <p>There are no contacts in your phonebook</p>\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectContact, selectLoading } from 'redux/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Container } from 'components/ContactForm/ContactForm.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const contacts = useSelector(selectContact);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        {contacts.length > 0 && <Filter />}\n        {/* <Filter /> */}\n        <div>{isLoading && 'Request in progress...'}</div>\n        <ContactList />\n      </div>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ErrorInfo","FormikForm","_templateObject2","_templateObject3","ButtonForm","_templateObject4","selectContact","state","contacts","items","selectLoading","isLoading","selectError","error","selectFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","_ref","name","includes","contactFormSchema","yup","shape","matches","required","number","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","find","contact","alert","concat","id","nanoid","console","log","addContact","resetForm","children","_jsxs","Form","Field","as","TextField","label","placeholder","fullWidth","size","margin","title","helperText","ErrorMessage","component","type","Filter","value","onChange","event","changeFilter","currentTarget","Wrapper","Button","Contact","_ref$item","item","onClick","deleteContact","Loader","Triangle","height","width","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ContactList","visibleContacts","useEffect","fetchContacts","_Fragment","map","length"],"sourceRoot":""}