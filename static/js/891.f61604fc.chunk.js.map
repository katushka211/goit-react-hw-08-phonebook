{"version":3,"file":"static/js/891.f61604fc.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Form as FormikForm, ErrorMessage as FormikErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  padding: 8px;\n  border: 1px solid #2a2a2a;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 10px;\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  font-size: 14px;\n  color: ${props => props.theme.colors.accent};\n`;\n\nexport const ButtonForm = styled.button`\n  width: 380px;\n  margin: 0 auto;\n  color: #fff;\n  padding: 15px 25px;\n  background-color: #38d2d2;\n  background-image: radial-gradient(\n      93% 87% at 87% 89%,\n      rgba(0, 0, 0, 0.23) 0%,\n      transparent 86.18%\n    ),\n    radial-gradient(\n      66% 66% at 26% 20%,\n      rgba(255, 255, 255, 0.55) 0%,\n      rgba(255, 255, 255, 0) 69.79%,\n      rgba(255, 255, 255, 0) 100%\n    );\n  box-shadow: inset -3px -3px 9px rgba(255, 255, 255, 0.25),\n    inset 0px 3px 9px rgba(255, 255, 255, 0.3),\n    inset 0px 1px 1px rgba(255, 255, 255, 0.6),\n    inset 0px -8px 36px rgba(0, 0, 0, 0.3),\n    inset 0px 1px 5px rgba(255, 255, 255, 0.6), 2px 19px 31px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  font-weight: bold;\n  font-size: 16px;\n  display: block;\n  border: 0;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  cursor: pointer;\n  &:hover {\n    box-shadow: rgba(255, 255, 255, 0.2) 0 3px 15px inset,\n      rgba(0, 0, 0, 0.1) 0 3px 5px, rgba(0, 0, 0, 0.1) 0 10px 13px;\n    transform: scale(1.05);\n  }\n`;\n","export const selectContact = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = state.contacts.items;\n  const filter = state.filter;\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { ButtonForm } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContact } from 'redux/selectors';\n\nconst contactFormSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required!'),\n  number: yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n\n  const handleSubmit = (values, actions) => {\n    const contact = {\n      name: values.name,\n      number: values.number,\n      id: nanoid(),\n    };\n\n    if (contacts.find(({ name }) => name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact(contact));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={contactFormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label>\n          Name\n          <Field name=\"name\" placeholder=\"Annie Copeland\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </label>\n        <label>\n          Number\n          <Field\n            placeholder=\"227-91-26\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </label>\n        <ButtonForm type=\"submit\">Add contact</ButtonForm>\n      </Form>\n    </Formik>\n  );\n};\n","import { selectFilter } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const changeFilterHandler = event => {\n    dispatch(changeFilter(event.currentTarget.value));\n  };\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={filter} onChange={changeFilterHandler} />\n    </label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 300px;\n  margin: 15px auto;\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  justify-content: space-between;\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  color: #fff;\n  padding: 7px 10px;\n  background-color: #38d2d2;\n  background-image: radial-gradient(\n      93% 87% at 87% 89%,\n      rgba(0, 0, 0, 0.23) 0%,\n      transparent 86.18%\n    ),\n    radial-gradient(\n      66% 66% at 26% 20%,\n      rgba(255, 255, 255, 0.55) 0%,\n      rgba(255, 255, 255, 0) 69.79%,\n      rgba(255, 255, 255, 0) 100%\n    );\n  box-shadow: inset -3px -3px 9px rgba(255, 255, 255, 0.25),\n    inset 0px 3px 9px rgba(255, 255, 255, 0.3),\n    inset 0px 1px 1px rgba(255, 255, 255, 0.6),\n    inset 0px -8px 36px rgba(0, 0, 0, 0.3),\n    inset 0px 1px 5px rgba(255, 255, 255, 0.6), 2px 19px 31px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  font-weight: bold;\n  font-size: 16px;\n  display: block;\n  border: 0;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  cursor: pointer;\n  &:hover {\n    box-shadow: rgba(255, 255, 255, 0.2) 0 3px 15px inset,\n      rgba(0, 0, 0, 0.1) 0 3px 5px, rgba(0, 0, 0, 0.1) 0 10px 13px;\n    transform: scale(1.05);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Wrapper } from './Contact.styled';\nimport { Button } from './Contact.styled';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ item: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  const deleteContactHandler = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <Wrapper>\n      <p>\n        {name} : {number}\n      </p>\n      <Button type=\"button\" onClick={() => deleteContactHandler(id)}>\n        Delete\n      </Button>\n    </Wrapper>\n  );\n};\n\nContact.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Contact } from '../Contact/Contact';\nimport {\n  getVisibleContacts,\n  selectLoading,\n  selectError,\n} from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul>\n          {visibleContacts.map(item => (\n            <li key={item.id}>\n              <Contact item={item} />\n            </li>\n          ))}\n        </ul>\n      )}\n      {!visibleContacts.length && !error && !isLoading && (\n        <p>There are no contacts in your phonebook</p>\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectLoading } from 'redux/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ButtonForm","styled","FormikForm","_templateObject","_taggedTemplateLiteral","FormikErrorMessage","_templateObject2","props","theme","colors","accent","_templateObject3","selectContact","state","contacts","items","selectLoading","isLoading","selectError","error","selectFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","_ref","name","includes","contactFormSchema","yup","shape","matches","required","number","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","contact","id","nanoid","find","alert","concat","addContact","resetForm","children","_jsxs","Form","Field","placeholder","ErrorMessage","component","type","pattern","title","Filter","value","onChange","event","changeFilter","currentTarget","Wrapper","Button","Contact","_ref$item","item","onClick","deleteContact","ContactList","visibleContacts","useEffect","fetchContacts","_Fragment","Loader","map","length"],"sourceRoot":""}