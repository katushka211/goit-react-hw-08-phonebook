{"version":3,"file":"static/js/236.716939e5.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import React from 'react';\nimport { TextField, Button, Grid, Box, Typography } from '@mui/material';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operation';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .required('Name is required')\n    .min(3, 'Name should be at least 3 characters')\n    .max(30, 'Name should not exceed 30 characters'),\n  email: Yup.string()\n    .required('Email is required')\n    .email('Invalid email address'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(7, 'Password should be at least 7 characters')\n    .test(\n      'no-password',\n      'Password cannot contain the word \"password\"',\n      value => !value.toLowerCase().includes('password')\n    ),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'rgba(248, 248, 248, 0.188)',\n        height: '100vh',\n      }}\n    >\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Box\n          sx={{\n            margin: '0 auto',\n            width: 500,\n            height: '70vh',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '10',\n          }}\n        >\n          <Form>\n            <Typography\n              variant=\"h5\"\n              component=\"h2\"\n              mb={2}\n              sx={{ color: 'dark-gray', textAlign: 'center' }}\n            >\n              Registration\n            </Typography>\n            <Grid container spacing={2} justifyContent=\"center\">\n              <Grid item xs={12}>\n                <Field\n                  as={TextField}\n                  label=\"Username\"\n                  variant=\"outlined\"\n                  fullWidth\n                  required\n                  name=\"name\"\n                />\n                <ErrorMessage\n                  name=\"name\"\n                  component=\"div\"\n                  className=\"error\"\n                  style={{ color: 'red', fontSize: '14px' }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Field\n                  as={TextField}\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  fullWidth\n                  required\n                  name=\"email\"\n                  type=\"email\"\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"div\"\n                  className=\"error\"\n                  style={{ color: 'red', fontSize: '14px' }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Field\n                  as={TextField}\n                  label=\"Password\"\n                  variant=\"outlined\"\n                  fullWidth\n                  required\n                  name=\"password\"\n                  type=\"password\"\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className=\"error\"\n                  style={{ color: 'red', fontSize: '14px' }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  fullWidth\n                  sx={{\n                    backgroundColor: '#38d2d2',\n                    '&:hover': {\n                      backgroundColor: 'rgb(41, 132, 132)',\n                    },\n                  }}\n                >\n                  Register\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        </Box>\n      </Formik>\n    </Box>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["validationSchema","Yup","name","required","min","max","email","password","test","value","toLowerCase","includes","RegisterForm","dispatch","useDispatch","_jsx","Box","sx","backgroundColor","height","children","Formik","initialValues","onSubmit","values","_ref","resetForm","register","margin","width","display","flexDirection","justifyContent","alignItems","padding","_jsxs","Form","Typography","variant","component","mb","color","textAlign","Grid","container","spacing","item","xs","Field","as","TextField","label","fullWidth","ErrorMessage","className","style","fontSize","type","Button"],"sourceRoot":""}